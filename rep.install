<?php
/**
 * Update #9001: Change user_tracking URLs to LONGTEXT and rebuild PK.
 */
function rep_update_9001() {
  $db = \Drupal::database();
  $schema = $db->schema();
  if ($schema->tableExists('user_tracking')) {
    $schema->dropPrimaryKey('user_tracking');
    if ($schema->fieldExists('user_tracking', 'previous_url')) {
      $schema->changeField('user_tracking', 'previous_url', 'previous_url', [
        'type' => 'text', 'size' => 'big', 'not null' => FALSE,
      ]);
    }
    if ($schema->fieldExists('user_tracking', 'current_url')) {
      $schema->changeField('user_tracking', 'current_url', 'current_url', [
        'type' => 'text', 'size' => 'big', 'not null' => FALSE,
      ]);
    }
    // Raw SQL for the PK with prefix length.
    $db->query("
      ALTER TABLE {user_tracking}
      ADD PRIMARY KEY (uid, current_url(191))
    ");
  }
}

function rep_schema() {
  $schema['rep_entry_point_mapping'] = [
    'description' => 'Mapping EntryPoints for Ontology',
    'fields' => [
      'id' => [
        'description' => 'Primary Key',
        'type'        => 'serial',
        'unsigned'    => TRUE,
        'not null'    => TRUE,
      ],
      'entry_point_uri' => [
        'description' => 'URI of entry point (e.g. http://â€¦/instrument).',
        'type'        => 'varchar',
        'length'      => 255,
        'not null'    => TRUE,
      ],
      'node_uri' => [
        'description' => 'Complete URI',
        'type'        => 'varchar',
        'length'      => 255,
        'not null'    => TRUE,
      ],
    ],
    'primary key' => ['id'],
  ];
  return $schema;
}

/**
 * Update #9003: Create rep_entry_point_mapping is missing.
 */
function rep_update_9003() {
  $schema_def = rep_schema()['rep_entry_point_mapping'];
  $db = \Drupal::database();
  $sm = $db->schema();
  if (! $sm->tableExists('rep_entry_point_mapping')) {
    $sm->createTable('rep_entry_point_mapping', $schema_def);
  }
}
